.. Copyright (c) 2018 RackN Inc.
.. Licensed under the Apache License, Version 2.0 (the "License");
.. Digital Rebar Provision documentation under Digital Rebar master license
.. index::
  pair: RackN; RackN UX

.. _rackn_ux_hacks:

RackN UX Behaviors
~~~~~~~~~~~~~~~~~~

.. _rackn_ux_version:

Version.JSON
============

The UX version is determine live by downloading ```version.json``` during initialization.  This file is located in the ```app/assets``` directory and is typically generated by the automated build process using ```compute_version.sh``` to create the file.

If the file is missing then the UX will display ```unknown``` and the console log will throw a lot of 404 errors.  There is no other side effect of a missing version file.

The format of the version file is:

  ::
	{
	  "tags": [
	    "stable",
	    "test",
	    "tip",
	    "v1.6.0"
	  ],
	  "ahead_count": 0,
	  "ahead_tag": "stable",
	  "ahead_who": "system",
	  "offline": false,
	  "hash": "63bb13b2fbbb4df4251f9bccbc6a43d036d1515e"
	}

.. _rackn_render_params:

Specal Rendering for Params
===========================

There are several meta fields that can be used to adjust on screen display for params

  * ```icon: [icon name]``` - sets the icon
  * ```color: [color name]``` - set the color
  * ```password: [anyvalue]``` - on Param, renders as password (NOT encrypted, just obfuscated)
  * ```readonly: [anyvalue]``` - on Param, does not allow UX editing
  * ```render: raw``` - on Param, presents textarea to user instead of regular edit, does not reformat
  * ```render: link``` - on Param, adds an https://[value] link field that opens in a new tab.
  * ```render: machines-map``` - on Param, provides links and icons for machines in a UUID map.
  * ```render: krib``` - on Profile, will show a special section for the Kubernetes and links when ```krib/cluster-admin-conf``` is present.

